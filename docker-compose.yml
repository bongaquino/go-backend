services:
  # # MongoDB
  # mongo:
  #   image: mongo:latest
  #   container_name: mongo
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo-data:/data/db
  #     - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
  #   networks:
  #     - network

  # # Mongo Express (Web UI for MongoDB)
  # mongo-express:
  #   image: mongo-express:latest
  #   container_name: mongo-express
  #   restart: unless-stopped
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: password
  #     ME_CONFIG_MONGODB_SERVER: mongo
  #   ports:
  #     - "8082:8081"
  #   networks:
  #     - network

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - network

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8083:8081"
    networks:
      - network

  # Gateway
  gateway:
    image: tykio/tyk-gateway:latest
    container_name: gateway
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/tyk.conf:/opt/tyk-gateway/tyk.conf
      - ./gateway/api.json:/opt/tyk-gateway/apps/api.json
    environment:
      TYK_GW_SECRET: "352d20ee67be67f6340b4c0605b044b7"
      TYK_GW_STORAGE_HOST: "redis"
      TYK_GW_STORAGE_PORT: "6379"
      TYK_GW_STORAGE_PASSWORD: ""
      TYK_GW_STORAGE_DB: "0"
    depends_on:
      - redis
    networks:
      - network

  # Orchestrator
  orchestrator:
    image: koneksi/orchestrator:latest
    build:
      context: orchestrator
      dockerfile: Dockerfile
    container_name: orchestrator
    restart: unless-stopped
    env_file:
      - services/orchestrator/.env
    volumes:
      - ./services/orchestrator:/app
    depends_on:
      - mongo
      - redis
    networks:
      - network

volumes:
  mongo-data:
  redis-data:

networks:
  network:
    driver: bridge
