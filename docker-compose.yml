services:
  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - network

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - network

  # Mongo Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8080:8081"
    networks:
      - network

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8081:8081"
    networks:
      - network

  # API Gateway
  tyk-gateway:
    image: tykio/tyk-gateway
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "8082:8080"  # Public API
      - "8083:8081"  # Admin API
    volumes:
      - ./api-gateway/apis:/opt/tyk-gateway/apis
      - ./api-gateway/apis:/opt/tyk-gateway/plugins
      - ./api-gateway/templates:/opt/tyk-gateway/templates
      - ./api-gateway/tyk.conf:/opt/tyk-gateway/tyk.conf
    environment:
      TYK_GW_SECRET: "96b1249557b5aa5ed97e7a439f5834a2c52a7f57cdfc5b44e127acc211edcfb4"
      TYK_DB_STORAGE_TYPE: "redis"
      TYK_DB_REDIS_HOST: "redis"
      TYK_DB_REDIS_PORT: "6379"
    depends_on:
      - redis
    networks:
      - network

  # IAM Service
  iam-service:
    image: koneksi/iam-service:latest
    build:
      context: services/iam-service
      dockerfile: Dockerfile
    container_name: iam-service
    restart: unless-stopped
    ports:
      - "8084:8080"
    env_file:
      - services/iam-service/.env
    volumes:
      - ./services/iam-service/src:/app/src
    depends_on:
      - mongo
      - redis
    networks:
      - network

volumes:
  mongo-data:
  redis-data:

networks:
  network:
    driver: bridge
